@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":CourseBookParser" as CourseBookParser LOGIC_COLOR
participant ":CourseAchieveCommandParser" as CourseAchieveCommandParser LOGIC_COLOR
participant "r:CourseAchieveCommand" as CourseAchieveCommand LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant ":CourseBook" as CourseBook MODEL_COLOR
participant ":CourseInfo" as CourseInfo MODEL_COLOR
end box

[-> LogicManager : execute(\ncourse achieve)
activate LogicManager

LogicManager -> CourseBookParser : parseCommand(\ncourse achieve)
activate CourseBookParser

create CourseAchieveCommandParser
CourseBookParser -> CourseAchieveCommandParser : new CourseAchieveCommandParser(\nCap)
activate CourseAchieveCommandParser

create CourseAchieveCommand
CourseAchieveCommandParser -> CourseAchieveCommand : new CourseAchieveCommand(\nCap)
activate CourseAchieveCommand

CourseAchieveCommand --> CourseAchieveCommandParser
CourseAchieveCommandParser --> CourseBookParser : c
deactivate CourseAchieveCommandParser

CourseBookParser --> LogicManager : c
deactivate CourseBookParser

LogicManager -> CourseAchieveCommand : execute()
activate CourseAchieveCommand

CourseAchieveCommand -> Model : getCourseInfo()
activate Model

Model -> CourseBook : getCourseInfo()
activate CourseBook

CourseBook --> Model
deactivate CourseBook

Model --> CourseAchieveCommand
deactivate Model

CourseAchieveCommand --> CourseInfo : computeEstimatedCap(Course info, Cap)
activate CourseInfo

CourseInfo --> CourseInfo : getSemesters()
CourseInfo --> CourseInfo : getCap()

CourseInfo --> CourseAchieveCommand
deactivate CourseInfo

CourseAchieveCommand --> LogicManager : result
deactivate CourseAchieveCommand
CourseAchieveCommand -[hidden]-> LogicManager : result
destroy CourseAchieveCommand

[<--LogicManager
deactivate LogicManager
@enduml
